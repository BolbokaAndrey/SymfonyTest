{% extends 'base.html.twig' %}

{% block title %}–ê–¥–º–∏–Ω–∫–∞ ‚Äî {{ title }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/admin.css') }}">
{% endblock %}

{% block body %}
    <div class="layout">
        {% include 'admin/components/sidebar.html.twig' %}
        <main class="content">
            {% embed 'admin/components/header.html.twig' %}
                {% block header_actions %}
                    <a href="{{ path('admin_properties_list') }}" class="btn btn-secondary">
                        ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                    </a>
                {% endblock %}
            {% endembed %}

            {% for message in app.flashes('error') %}
                <div style="background: var(--danger-color); color: white; padding: 12px; border-radius: 6px; margin-bottom: 20px;">
                    {{ message }}
                </div>
            {% endfor %}

            <div class="form-container">
                <h2 style="margin-bottom: 32px;">{{ title }}</h2>

                <form method="POST">
                    <div class="form-group">
                        <label class="form-label" for="name">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ *</label>
                        <input type="text" id="name" name="name" class="form-control"
                               value="{{ propertyDefinition.name }}" required>
                        <div class="help-text">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è</div>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="description">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                        <input type="text" id="description" name="description" class="form-control"
                               value="{{ propertyDefinition.description }}">
                        <div class="help-text">–ü–æ–º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ–Ω—è—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞</div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label" for="type">–¢–∏–ø —Å–≤–æ–π—Å—Ç–≤–∞ *</label>
                            <select id="type" name="type" class="type-select" required onchange="toggleValidationRules()">
                                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                                <option value="text" {{ propertyDefinition.type == 'text' ? 'selected' }}>–¢–µ–∫—Å—Ç</option>
                                <option value="textarea" {{ propertyDefinition.type == 'textarea' ? 'selected' }}>–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç</option>
                                <option value="number" {{ propertyDefinition.type == 'number' ? 'selected' }}>–ß–∏—Å–ª–æ</option>
                                <option value="date" {{ propertyDefinition.type == 'date' ? 'selected' }}>–î–∞—Ç–∞</option>
                                <option value="file" {{ propertyDefinition.type == 'file' ? 'selected' }}>–§–∞–π–ª</option>
                                <option value="select" {{ propertyDefinition.type == 'select' ? 'selected' }}>–í—ã–±–æ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞</option>
                                <option value="checkbox" {{ propertyDefinition.type == 'checkbox' ? 'selected' }}>–ß–µ–∫–±–æ–∫—Å</option>
                                <option value="radio" {{ propertyDefinition.type == 'radio' ? 'selected' }}>–†–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="sortOrder">–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</label>
                            <input type="number" id="sortOrder" name="sortOrder" class="form-control"
                                   value="{{ propertyDefinition.sortOrder ?: 0 }}" min="0">
                        </div>
                    </div>

                    <div class="form-row-3">
                        <div class="checkbox-group">
                            <input type="checkbox" id="required" name="required" {{ propertyDefinition.required ? 'checked' }}>
                            <label for="required">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ</label>
                        </div>

                        <div class="checkbox-group">
                            <input type="checkbox" id="multiple" name="multiple" {{ propertyDefinition.multiple ? 'checked' }}>
                            <label for="multiple">–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ</label>
                        </div>

                        <div class="checkbox-group">
                            <input type="checkbox" id="active" name="active" {{ propertyDefinition.active is not defined or propertyDefinition.active ? 'checked' }}>
                            <label for="active">–ê–∫—Ç–∏–≤–Ω–æ–µ</label>
                        </div>
                    </div>

                    <div id="validation-rules" class="validation-rules" style="display: none;">
                        <h3>–ü—Ä–∞–≤–∏–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏</h3>
                        <div class="validation-rule">
                            <label for="validation_min_length">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞:</label>
                            <input type="number" id="validation_min_length" name="validation_min_length"
                                   value="{{ propertyDefinition.validationRules.minLength ?? '' }}" min="0">
                        </div>
                        <div class="validation-rule">
                            <label for="validation_max_length">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞:</label>
                            <input type="number" id="validation_max_length" name="validation_max_length"
                                   value="{{ propertyDefinition.validationRules.maxLength ?? '' }}" min="0">
                        </div>
                        <div class="validation-rule">
                            <label for="validation_pattern">–†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:</label>
                            <input type="text" id="validation_pattern" name="validation_pattern"
                                   value="{{ propertyDefinition.validationRules.pattern ?? '' }}"
                                   placeholder="^[a-zA-Z]+$">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="default_value">–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</label>
                        <input type="text" id="default_value" name="default_value" class="form-control"
                               value="{{ propertyDefinition.defaultValue.value ?? '' }}">
                        <div class="help-text">–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –Ω—É–∂–Ω–æ</div>
                    </div>

                    <div class="form-actions">
                        <a href="{{ path('admin_properties_list') }}" class="btn btn-secondary">–û—Ç–º–µ–Ω–∞</a>
                        <button type="submit" class="btn btn-primary">
                            {{ mode == 'create' ? '‚ûï –°–æ–∑–¥–∞—Ç—å' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å' }}
                        </button>
                    </div>
                </form>
            </div>
        </main>
    </div>

    <script>
        function toggleValidationRules() {
            const type = document.getElementById('type').value;
            const validationRules = document.getElementById('validation-rules');
            const minLength = document.getElementById('validation_min_length');
            const maxLength = document.getElementById('validation_max_length');
            const pattern = document.getElementById('validation_pattern');

            // Reset validation rules
            minLength.value = '';
            maxLength.value = '';
            pattern.value = '';

            if (['text', 'textarea'].includes(type)) {
                validationRules.style.display = 'block';
                minLength.parentElement.style.display = 'flex';
                maxLength.parentElement.style.display = 'flex';
                pattern.parentElement.style.display = 'flex';
            } else if (type === 'number') {
                validationRules.style.display = 'block';
                minLength.parentElement.style.display = 'none';
                maxLength.parentElement.style.display = 'none';
                pattern.parentElement.style.display = 'none';
            } else {
                validationRules.style.display = 'none';
            }
        }

        // Initialize validation rules visibility
        toggleValidationRules();
    </script>
{% endblock %}
